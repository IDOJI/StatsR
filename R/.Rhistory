group_colors <- sample(colors, length(unique(df$group_var)), replace=F)
# 🟥 color palette ################################################################
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
# 플롯 출력
print(p)
# 🟥 color palette ################################################################
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = group_var), size = 1, alpha = 0.3) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
# 플롯 출력
print(p)
# 🟥 color palette ################################################################
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = group_var), size = 1, alpha = 0.3) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
# 플롯 출력
print(p)
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
# 플롯 출력
print(p)
# 🟥 color palette ################################################################
palette = c("Pastel1", "Pastel2", "Set1", "Set2", "Set3")
colors = brewer.pal(n = 12, sample(palette, 1)) %>% suppressWarnings()
fill_color = sample(colors, 1)
group_colors <- sample(colors, length(unique(df$group_var)), replace=F)
# 🟥 color palette ################################################################
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
# 플롯 출력
print(p)
# 🟥 Change colnames #########################################################
df = change_colnames(df, x, "x_Var")
df = change_colnames(df, group_var, "group_var")
# 🟥 color palette ################################################################
palette = c("Pastel1", "Pastel2", "Set1", "Set2", "Set3")
colors = brewer.pal(n = 12, sample(palette, 1)) %>% suppressWarnings()
fill_color = sample(colors, 1)
group_colors <- sample(colors, length(unique(df$group_var)), replace=F)
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
p
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_blank()  # 범례 제목 숨기기
)
p
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = x, title = "Histogram", fill = "Group") +  # x 축 제목 및 범례 제목 추가
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
)
p
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = x, title = "Histogram", fill = group_var) +  # x 축 제목 및 범례 제목 추가
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
)
p
# Density + Hist combined
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group") +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
p
# Density + Hist combined
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = "x_Var", title = "Histogram with Density by Group", fill = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
p
group_var
# Density + Hist combined
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = x,
title = "Histogram with Density by Group",
fill = group_var,  # fill 범례 제목 변경
color = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
p
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = x,
title = "Histogram with Density by Group",
fill = group_var,  # fill 범례 제목 변경
color = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
p
p = p + labs(x = x, title = "Histogram with Density by Group") +
geom_density(aes(color = group_var), size = 1, alpha = 0.3)
p
ggplot___histogram___Group = function(df,
x,
group_var,
group_combined=F,
density = T){
# 🟥 Change colnames #########################################################
df = change_colnames(df, x, "x_Var")
df = change_colnames(df, group_var, "group_var")
# 🟥 color palette ################################################################
palette = c("Pastel1", "Pastel2", "Set1", "Set2", "Set3")
colors = brewer.pal(n = 12, sample(palette, 1)) %>% suppressWarnings()
fill_color = sample(colors, 1)
group_colors <- sample(colors, length(unique(df$group_var)), replace=F)
# 🟥 plotting ################################################################
if(group_combined){
# Density + Hist combined
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = x,
title = "Histogram with Density by Group",
fill = group_var,  # fill 범례 제목 변경
color = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
}else{
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = x,
title = "Histogram with Density by Group",
fill = group_var,  # fill 범례 제목 변경
color = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
if(density){
p = p + labs(x = x, title = "Histogram with Density by Group") +
geom_density(aes(color = group_var), size = 1, alpha = 0.3)
}
}
return(p)
}
ggplot___histogram___Group = function(df,
x,
group_var,
group_combined=F,
density = T){
# 🟥 Change colnames #########################################################
df = change_colnames(df, x, "x_Var")
df = change_colnames(df, group_var, "group_var")
# 🟥 color palette ################################################################
palette = c("Pastel1", "Pastel2", "Set1", "Set2", "Set3")
colors = brewer.pal(n = 12, sample(palette, 1)) %>% suppressWarnings()
fill_color = sample(colors, 1)
group_colors <- sample(colors, length(unique(df$group_var)), replace=F)
# 🟥 plotting ################################################################
if(group_combined){
# Density + Hist combined
p <- ggplot(df, aes(x = x_Var, group = group_var)) +
geom_histogram(aes(y = ..density.., fill = factor(group_var)), color = "black", bins = 20, alpha = 0.5) +
geom_density(aes(color = factor(group_var)), size = 1, alpha = 0.3) +
scale_fill_manual(values = group_colors) +
scale_color_manual(values = group_colors) +
theme_minimal() +
labs(x = x,
title = "Histogram with Density by Group",
fill = group_var,  # fill 범례 제목 변경
color = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
}else{
p <- ggplot(df, aes(x = x_Var)) +
geom_histogram(aes(y = ..density.., fill = group_var), color = "black", bins = 20, alpha = 0.5) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
facet_wrap(~ group_var, scales = "free_y") +  # 각 그룹별로 패널을 분할
theme_minimal() +
labs(x = x,
title = "Histogram with Density by Group",
fill = group_var,  # fill 범례 제목 변경
color = group_var) +
theme(
axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.title = element_text(size = 12, face = "bold")  # 범례 제목의 글자 크기 및 스타일 조절
)
if(density){
p = p + labs(x = x, title = "Histogram with Density by Group") +
geom_density(aes(color = group_var), size = 1, alpha = 0.3)
}
}
return(p)
}
file.name = "Histogram"
filename = paste0(file.name, "___", x)
filename
filename = paste0(file.name, "___", x, "___", group_var)
filename
# Density
if(density){
file.name = paste0(file.name, "+Density")
}
file.name
group_var
paste0(file.name, NULL)
# Group_var
file.name = paste(file.name, x, group_var, sep = "___")
file.name
paste(file.name, x, NULL, sep = "___")
# 🟥 filename #########################################################################
file.name = "Histogram"
# Density
if(density){
file.name = paste0(file.name, "+Density")
}
# variables
file.name = paste(file.name, x, group_var, sep = "___")
# 🟥 Group #########################################################################
## 🟨 Non Group ===================================================================
if(is.null(group_var)){
p = ggplot___histogram___Nongroup(df, x, density)
## 🟨 Group ===================================================================
}else{
p = ggplot___histogram___Group(df, x, group_var, group_combined, density)
}
# 🟥 Save plot #########################################################################
ggsave(paste0(path_Export, "/", filename, ".png"), width = 10, height = 7.5, units = "in", dpi = 200, bg = "white")
ggplot___histogram = function(df,
x = NULL,
group_var = NULL,
group_combined=T,
density = T,
path_Export,
width = 20,
height = 5){
# 🟥 packages #########################################################################
install_packages = function(packages, load=TRUE) {
# load : load the packages after installation?
for(pkg in packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg)
}
if(load){
library(pkg, character.only = TRUE)
}
}
}
visual = c("ggplot2", "rlang", "RColorBrewer")
install_packages(visual)
# 🟥 filename #########################################################################
file.name = "Histogram"
# Density
if(density){
file.name = paste0(file.name, "+Density")
}
# variables
file.name = paste(file.name, x, group_var, sep = "___")
# 🟥 Group #########################################################################
## 🟨 Non Group ===================================================================
if(is.null(group_var)){
p = ggplot___histogram___Nongroup(df, x, density)
## 🟨 Group ===================================================================
}
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 히스토그램과 QQ 플롯을 함께 그리는 함수
plot_hist_qq <- function(data, x_var) {
# 히스토그램
hist_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot")
# QQ 플롯
qq_plot <- ggplot(data, aes(sample = !!sym(x_var))) +
geom_qq() +
geom_qq_line() +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles")
# 히스토그램과 QQ 플롯을 하나의 그래프로 결합
combined_plot <- ggarrange(hist_plot, qq_plot, nrow = 1)
return(combined_plot)
}
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 함수를 사용하여 히스토그램과 QQ 플롯 그리기
plot_hist_qq(data, "value")
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 히스토그램과 QQ 플롯을 함께 그리는 함수
plot_hist_qq <- function(data, x_var) {
# 히스토그램
hist_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot")
# QQ 플롯
qq_plot <- ggplot(data, aes(sample = !!sym(x_var))) +
geom_qq() +
geom_qq_line() +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles")
# 히스토그램과 QQ 플롯을 하나의 그래프로 결합
combined_plot <- ggarrange(hist_plot, qq_plot, nrow = 1)
return(combined_plot)
}
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 함수를 사용하여 히스토그램과 QQ 플롯 그리기
plot_hist_qq(data, "value")
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 히스토그램과 QQ 플롯을 하나의 그림 위에 겹쳐서 그리는 함수
plot_combined <- function(data, x_var) {
# 히스토그램과 QQ 플롯을 하나의 ggplot 객체에 추가
combined_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot") +
geom_qq(aes(sample = !!sym(x_var)), color = "red") +
geom_qq_line(aes(sample = !!sym(x_var)), color = "red")
return(combined_plot)
}
# 함수를 사용하여 히스토그램과 QQ 플롯을 겹쳐서 그리기
plot_combined(data, "value")
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 히스토그램과 QQ 플롯을 하나의 그림 위에 겹쳐서 그리는 함수
plot_combined <- function(data, x_var) {
# 히스토그램과 QQ 플롯을 하나의 ggplot 객체에 추가
combined_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot") +
geom_qq(aes(sample = !!sym(x_var)), color = "red") +
geom_qq_line(aes(sample = !!sym(x_var)), color = "red")
return(combined_plot)
}
# 함수를 사용하여 히스토그램과 QQ 플롯을 겹쳐서 그리기
plot_combined(data, "value")
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 히스토그램과 QQ 플롯을 하나의 그림 위에 겹쳐서 그리는 함수
plot_combined <- function(data, x_var) {
# 히스토그램과 QQ 플롯을 하나의 ggplot 객체에 추가
combined_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot") +
geom_qq(aes(sample = !!sym(x_var)), color = "red") +
geom_qq_line(aes(sample = !!sym(x_var)), color = "red")
return(combined_plot)
}
# 함수를 사용하여 히스토그램과 QQ 플롯을 겹쳐서 그리기
plot_combined(data, "value")
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 히스토그램과 QQ 플롯을 하나의 그림 위에 겹쳐서 그리는 함수
plot_combined <- function(data, x_var) {
# 히스토그램과 QQ 플롯을 하나의 ggplot 객체에 추가
combined_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot") +
geom_qq(aes(sample = !!sym(x_var)), color = "red") +
geom_qq_line(aes(sample = !!sym(x_var)), color = "red")
return(combined_plot)
}
# 함수를 사용하여 히스토그램과 QQ 플롯을 겹쳐서 그리기
plot_combined(data, "value")
library(ggplot2)
library(ggpubr)  # ggplot2와 함께 사용할 수 있는 패키지
# 예제 데이터 생성
set.seed(123)
data <- data.frame(value = rnorm(100))
# 히스토그램과 QQ 플롯을 하나의 그림 위에 겹쳐서 그리는 함수
plot_combined <- function(data, x_var) {
# 히스토그램과 QQ 플롯을 하나의 ggplot 객체에 추가
combined_plot <- ggplot(data, aes(x = !!sym(x_var))) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = x_var, y = "Frequency", title = "Histogram with QQ Plot") +
geom_qq(aes(sample = !!sym(x_var)), color = "red") +
geom_qq_line(aes(sample = !!sym(x_var)), color = "red")
return(combined_plot)
}
# 함수를 사용하여 히스토그램과 QQ 플롯을 겹쳐서 그리기
plot_combined(data, "value")
